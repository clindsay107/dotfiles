# Make a directory and cd to it
mkcd () {
  mkdir -p "$1" && cd "$1"
}

# Print file name, info and bytesize
info () {
  file "$1"
  wc -c "$1"
}

# Print absolute path given a filename
fp () {
  case "$1" in
    /*) printf '%s\n' "$1";;
    *) printf '%s\n' "$PWD/$1";;
  esac
}

# Push to current branch with remote origin
gpc () {
  branch=$(git rev-parse --abbrev-ref HEAD)
  git push origin $branch
}

# Set upstream to origin/whatever
gsut () {
  git branch --set-upstream-to=origin/"$1" "$1"
}

# easy alias for git stash show, where arg $1 is the stash number
# -p flag shows expanded view
gsts () {
  if [ "$1" == "-p" ];
  then
    git stash show -p stash@{"$2"}
  else
    git stash show stash@{"$1"}
  fi
}

gch () {
  git checkout "$@"
}

# Get public-facing IP
myip () {
  PUB_IP=$(curl -s http://strongco.de/ip)

  if [ "$(uname)" == "Linux" ]; then
    echo "$PUB_IP"
  elif [ "$(uname)" == "Darwin" ]; then
    echo "$PUB_IP" | tee >(pbcopy)
  fi
}

# Get process for given port
port () {
  sudo lsof -i :$1
}

# git merge master into current branch
gmm () {
  CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
  if [ $CURRENT_BRANCH == "master" ]; then
    echo "Already on master branch"
  else
    git checkout master
    git pull
    git checkout $CURRENT_BRANCH
    git merge master
  fi
}

# Rename a file
rename () {
  DIR=$(dirname $1)
  mv $1 $DIR/$2
}

# Open SOCKS proxy on chl server port 8080
soxprox () {
  ssh -D 8080 -C -N -f -q chl
  if [ $? -eq 0 ]; then
    echo "SOCKS proxy opened on port 8080"
  else
    echo "Error opening proxy on port 8080"
  fi
}

# Connect to IRC tmux session on VPS
irc () {
  if [ "$(hostname)" == "chl-server" ]; then
    tmux a -d -t irc
  else 
    echo -ne "\033]0;IRC" && ssh -x -t chl 'tmux a -d -t irc; bash -l'
  fi
}

# Quickly serve current or supplied dir
serve () {
  if [ -z "$1" ]; then
    DIR="."
  else
    DIR=$1
  fi
  echo "Serving $(fp $DIR)"
  ruby -run -e httpd $DIR -p 3001
}
    
